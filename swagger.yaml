openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
  /users:
    get:
      operationId: UserController_getAllUsers
      parameters: []
      responses:
        '200':
          description: Получение списка всех пользователей.
      tags: &ref_0
        - Пользователи
  /users/search:
    get:
      operationId: UserController_getUserByCriteria
      parameters:
        - name: uid
          required: true
          in: query
          schema:
            type: string
        - name: email
          required: true
          in: query
          schema:
            type: string
        - name: createdAt
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: >-
            Получение пользователя по заданным критериям (ID, email или дата
            создания).
      tags: *ref_0
  /auth/register:
    post:
      operationId: AuthController_register
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDto'
      responses:
        '201':
          description: Пользователь успешно зарегистрирован.
      tags: &ref_1
        - Аутентификация
  /auth/login:
    post:
      operationId: AuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '200':
          description: Успешный вход в систему.
      tags: *ref_1
  /sessions/all:
    get:
      operationId: 1_getAllSessions
      summary: Получить все сессии пользователя
      parameters:
        - name: uid
          required: true
          in: query
          description: ID пользователя
          schema:
            type: string
      responses:
        '200':
          description: Возвращает список всех сессий пользователя.
      tags: &ref_2
        - Сессии
    delete:
      operationId: 5_deleteAllSessions
      summary: Удалить все сессии пользователя
      parameters:
        - name: uid
          required: true
          in: query
          description: ID пользователя
          schema:
            type: string
      responses:
        '200':
          description: Все сессии пользователя успешно удалены.
      tags: *ref_2
  /sessions:
    get:
      operationId: 2_getActiveSessions
      summary: Получить активные сессии
      parameters:
        - name: uid
          required: true
          in: query
          description: ID пользователя
          schema:
            type: string
      responses:
        '200':
          description: Возвращает список активных сессий пользователя.
      tags: *ref_2
  /sessions/end/{sessionId}:
    delete:
      operationId: SessionController_endSession
      summary: Принудительно завершить сессию
      parameters:
        - name: uid
          required: true
          in: query
          description: ID пользователя
          schema:
            type: string
        - name: sessionId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Сессия успешно завершена.
      tags: *ref_2
  /sessions/end-all:
    delete:
      operationId: 4_endAllSessions
      summary: Завершить все сессии пользователя
      parameters:
        - name: uid
          required: true
          in: query
          description: ID пользователя
          schema:
            type: string
      responses:
        '200':
          description: Все сессии пользователя были успешно завершены.
      tags: *ref_2
info:
  title: API документация
  description: Описание API
  version: '1.0'
  contact: {}
tags:
  - name: API
    description: ''
servers: []
components:
  schemas:
    RegisterDto:
      type: object
      properties:
        email:
          type: string
          description: Адрес электронной почты пользователя
        password:
          type: string
          description: Пароль пользователя
          minLength: 6
      required:
        - email
        - password
    LoginDto:
      type: object
      properties:
        email:
          type: string
          description: Электронная почта пользователя
        password:
          type: string
          description: Пароль пользователя
      required:
        - email
        - password
